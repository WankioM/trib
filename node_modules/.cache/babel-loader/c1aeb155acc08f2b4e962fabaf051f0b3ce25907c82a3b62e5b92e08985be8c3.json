{"ast":null,"code":"import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\n//import { useAuth , AuthContext } from '../../Context/AuthContext';\nimport \"./UpdateProfile.css\";\nexport const UpdateProfile = ({\n  generatedId\n}) => {\n\n  /*\r\n  \r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n  const { login } = useContext(AuthContext);\r\n  \r\n    const [formData, setFormData] = useState({\r\n    idNumber: '',\r\n    fullNames: '',\r\n    emailAddress: '',\r\n    relationship: '',\r\n    password: 'defAult',\r\n  });\r\n    const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n    const handleSubmit = () => {\r\n    setIsProfileUpdated(true);\r\n      axios\r\n      .post('http://localhost:3001/api/registerUser', {formData, generatedId})\r\n      .then((response) => {\r\n        console.log(response.data); // Assuming the API returns a response with status or message\r\n        const profileId = response.data.profileId;\r\n        login(profileId);\r\n        console.log(`profile is at div ${profileId}`)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  \r\n    \r\n  };\r\n    return (\r\n    <div className=\"profilesection\">\r\n      <div className=\"fram\">\r\n        <div className=\"overlap-grouph\">\r\n       \r\n          \r\n          // New utilities \r\n          <div className=\"upload-image\">\r\n            <h3> Account Details</h3>\r\n            \r\n            <div className ='inputdiv'>\r\n              <label htmlFor=\"idNumber\">ID Number:</label>\r\n              <input type=\"text\" id=\"idNumber\" name=\"idNumber\" \r\n              value={formData.idNumber}\r\n              onChange={handleChange}/>\r\n            </div>\r\n            \r\n            <div className ='inputdiv'>\r\n              <label htmlFor=\"fullNames\">Full Names:</label>\r\n              <input type=\"text\" id=\"fullNames\" name=\"fullNames\" \r\n              value={formData.fullNames}\r\n              onChange={handleChange}/>\r\n            </div>\r\n              <div className ='inputdiv'>\r\n              <label htmlFor=\"emailAddress\">Email Address:</label>\r\n              <input type=\"text\" id=\"emailAddress\" name=\"emailAddress\" \r\n              value={formData.emailAddress}\r\n              onChange={handleChange}/>\r\n            </div>\r\n              <div className ='inputdiv'>\r\n              <label htmlFor=\"relationship\">Relationship to Deceased:</label>\r\n              <input type=\"text\" id=\"relationship\" name=\"relationship\" \r\n              value={formData.relationship}\r\n              onChange={handleChange}/>\r\n            </div>\r\n            \r\n            {isProfileUpdated ? (\r\n              <div className ='inputdiv'>\r\n                <p>Profile updated successfully!</p>\r\n                <p style={{ fontStyle: 'italic' }}>Wait 24 hours for information verification</p>\r\n              </div>\r\n            ) : (\r\n              <button onClick={handleSubmit}>Submit</button>\r\n            )}\r\n              \r\n          </div>\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  */\n};\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","useState","useContext","axios","UpdateProfile","generatedId","_c","$RefreshReg$"],"sources":["C:/Users/VICTUS/Documents/WebApps/trib/trib/src/components/Dashboard/Details/UpdateProfile.js"],"sourcesContent":["import React , { useState ,  useContext}from \"react\";\r\nimport axios from \"axios\";\r\n//import { useAuth , AuthContext } from '../../Context/AuthContext';\r\nimport \"./UpdateProfile.css\";\r\n\r\n\r\nexport const UpdateProfile = ({ generatedId }) => {\r\n\r\n  /*\r\n  \r\n  const [isProfileUpdated, setIsProfileUpdated] = useState(false);\r\n  const { login } = useContext(AuthContext);\r\n  \r\n\r\n  const [formData, setFormData] = useState({\r\n    idNumber: '',\r\n    fullNames: '',\r\n    emailAddress: '',\r\n    relationship: '',\r\n    password: 'defAult',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsProfileUpdated(true);\r\n\r\n    axios\r\n      .post('http://localhost:3001/api/registerUser', {formData, generatedId})\r\n      .then((response) => {\r\n        console.log(response.data); // Assuming the API returns a response with status or message\r\n        const profileId = response.data.profileId;\r\n        login(profileId);\r\n        console.log(`profile is at div ${profileId}`)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  \r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"profilesection\">\r\n      <div className=\"fram\">\r\n        <div className=\"overlap-grouph\">\r\n       \r\n          \r\n          // New utilities \r\n          <div className=\"upload-image\">\r\n            <h3> Account Details</h3>\r\n            \r\n            <div className ='inputdiv'>\r\n              <label htmlFor=\"idNumber\">ID Number:</label>\r\n              <input type=\"text\" id=\"idNumber\" name=\"idNumber\" \r\n              value={formData.idNumber}\r\n              onChange={handleChange}/>\r\n            </div>\r\n            \r\n            <div className ='inputdiv'>\r\n              <label htmlFor=\"fullNames\">Full Names:</label>\r\n              <input type=\"text\" id=\"fullNames\" name=\"fullNames\" \r\n              value={formData.fullNames}\r\n              onChange={handleChange}/>\r\n            </div>\r\n\r\n            <div className ='inputdiv'>\r\n              <label htmlFor=\"emailAddress\">Email Address:</label>\r\n              <input type=\"text\" id=\"emailAddress\" name=\"emailAddress\" \r\n              value={formData.emailAddress}\r\n              onChange={handleChange}/>\r\n            </div>\r\n\r\n            <div className ='inputdiv'>\r\n              <label htmlFor=\"relationship\">Relationship to Deceased:</label>\r\n              <input type=\"text\" id=\"relationship\" name=\"relationship\" \r\n              value={formData.relationship}\r\n              onChange={handleChange}/>\r\n            </div>\r\n            \r\n            {isProfileUpdated ? (\r\n              <div className ='inputdiv'>\r\n                <p>Profile updated successfully!</p>\r\n                <p style={{ fontStyle: 'italic' }}>Wait 24 hours for information verification</p>\r\n              </div>\r\n            ) : (\r\n              <button onClick={handleSubmit}>Submit</button>\r\n            )}\r\n\r\n            \r\n          </div>\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  */\r\n};\r\n\r\nexport default UpdateProfile;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAKC,QAAQ,EAAIC,UAAU,QAAM,OAAO;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,qBAAqB;AAG5B,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;;EAEhD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApFE,CA6FD;AAACC,EAAA,GA/FWF,aAAa;AAiG1B,eAAeA,aAAa;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}