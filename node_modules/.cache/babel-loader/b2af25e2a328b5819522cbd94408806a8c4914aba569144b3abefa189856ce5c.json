{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Tracy\\\\Code\\\\TributeS\\\\tribute\\\\src\\\\components\\\\Dashboard\\\\Details\\\\Media.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Media.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaManagement() {\n  _s();\n  const [mediaList, setMediaList] = useState([]); // Array to store uploaded media\n  const [selectedCover, setSelectedCover] = useState(null); // Store selected cover\n  const [isPremiumPopupOpen, setIsPremiumPopupOpen] = useState(false);\n  const handleMediaUpload = files => {\n    // Implement logic to upload media files here\n    // Check file type, size, and premium limit\n    // Add valid media to the mediaList state\n    // Display a premium popup if the limit is exceeded\n  };\n  const handleDeleteMedia = mediaId => {\n    // Implement logic to delete media from the mediaList state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-list-section\",\n      children: mediaList.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-item\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteMedia(media.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, media.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*, video/*\",\n        multiple: true,\n        onChange: e => handleMediaUpload(e.target.files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover-page-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCover,\n        onChange: e => setSelectedCover(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Cover Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), mediaList.map(media => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: media.id,\n          children: media.name\n        }, media.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isPremiumPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"premium-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upgrade to premium to add more media.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaManagement, \"Gbc2oi4OrifZ5v/ehTLgzyB+rSw=\");\n_c = MediaManagement;\nexport default MediaManagement;\nvar _c;\n$RefreshReg$(_c, \"MediaManagement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MediaManagement","_s","mediaList","setMediaList","selectedCover","setSelectedCover","isPremiumPopupOpen","setIsPremiumPopupOpen","handleMediaUpload","files","handleDeleteMedia","mediaId","className","children","map","media","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","e","target","value","name","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/Tracy/Code/TributeS/tribute/src/components/Dashboard/Details/Media.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Media.css\";\r\n\r\nfunction MediaManagement() {\r\n  const [mediaList, setMediaList] = useState([]); // Array to store uploaded media\r\n  const [selectedCover, setSelectedCover] = useState(null); // Store selected cover\r\n  const [isPremiumPopupOpen, setIsPremiumPopupOpen] = useState(false);\r\n\r\n  const handleMediaUpload = (files) => {\r\n    // Implement logic to upload media files here\r\n    // Check file type, size, and premium limit\r\n    // Add valid media to the mediaList state\r\n    // Display a premium popup if the limit is exceeded\r\n  };\r\n\r\n  const handleDeleteMedia = (mediaId) => {\r\n    // Implement logic to delete media from the mediaList state\r\n  };\r\n\r\n  return (\r\n    <div className=\"media-management-container\">\r\n      <div className=\"media-list-section\">\r\n        {/* Display already-added media with delete buttons */}\r\n        {mediaList.map((media) => (\r\n          <div key={media.id} className=\"media-item\">\r\n            {/* Display media */}\r\n            <button onClick={() => handleDeleteMedia(media.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"upload-section\">\r\n        {/* Allow users to drag and drop media files */}\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*, video/*\"\r\n          multiple\r\n          onChange={(e) => handleMediaUpload(e.target.files)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"cover-page-selection\">\r\n        {/* Allow users to select a cover page */}\r\n        <select\r\n          value={selectedCover}\r\n          onChange={(e) => setSelectedCover(e.target.value)}\r\n        >\r\n          <option value=\"\">Select Cover Page</option>\r\n          {mediaList.map((media) => (\r\n            <option key={media.id} value={media.id}>\r\n              {media.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {isPremiumPopupOpen && (\r\n        <div className=\"premium-popup\">\r\n          {/* Premium popup content */}\r\n          <p>Upgrade to premium to add more media.</p>\r\n          {/* Include premium upgrade button */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MediaManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}